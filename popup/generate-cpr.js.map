{"version":3,"sources":["webpack://generate-cpr-browser-plugin/./src/index.ts","webpack://generate-cpr-browser-plugin/./src/cpr.ts","webpack://generate-cpr-browser-plugin/webpack/bootstrap"],"names":["cprList","getValueFromInput","onSubmitHandler","validateCpr","cpr","digitisInCpr","split","map","digit","parseInt","convertCprStringToDigits","multiplierSequence","reduce","previousValue","currentValue","index","generateCprs","day","month","year","validCprs","Promise","resolve","digits","join","push","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","document","querySelector","elementId","value","event","preventDefault","then","cprs","forEach","cprListElement","createElement","textContent","append","addEventListener"],"mappings":"uBAAA,EAEMA,EAEAC,EAiBAC,E,mGCTO,EAAAC,YAAc,SAAUC,GACnC,IAAMC,EAbyB,SAAUD,GACzC,OAAOA,EAAIE,MAAM,IAAIC,KAAI,SAACC,GACxB,OAAOC,SAASD,MAWGE,CAAyBN,GACxCO,EAAqB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAKvD,OAJeN,EAAaO,QAAO,SAACC,EAAeC,EAAcC,GAC/D,OAAOF,EAAgBC,EAAeH,EAAmBI,KACxD,GAEa,IAAO,GAGZ,EAAAC,aAAe,SAAU,G,IACpCC,EAAG,MACHC,EAAK,QACLC,EAAI,OAEEC,EAAsB,GAC5B,OAAO,IAAIC,SAAkB,SAACC,GAC5B,IAAMC,EAAS,CAAC,EAAG,EAAG,EAAG,GACzB,EAAG,CACGA,EAAO,IAAM,EACfA,EAAO,IAAM,EAEbA,EAAO,GAAK,EAGVA,EAAO,GAAK,GAAKA,EAAO,IAAM,IAChCA,EAAO,IAAM,GAGXA,EAAO,GAAK,GAAKA,EAAO,IAAM,IAChCA,EAAO,IAAM,GAGXA,EAAO,GAAK,GAAKA,EAAO,IAAM,IAChCA,EAAO,IAAM,GAGXA,EAAO,GAAK,IACdA,EAAO,GAAK,GAGVA,EAAO,GAAK,IACdA,EAAO,GAAK,GAGVA,EAAO,GAAK,IACdA,EAAO,GAAK,GAGVA,EAAO,GAAK,IACdA,EAAO,GAAK,GAGd,IAAMnB,EAAMa,EAAMC,EAAQC,EAAOI,EAAOC,KAAK,IAM7C,GALgB,EAAArB,YAAYC,IAE1BgB,EAAUK,KAAKrB,GAID,IAAdmB,EAAO,IACO,IAAdA,EAAO,IACO,IAAdA,EAAO,IACO,IAAdA,EAAO,GAEP,YAGFA,EAAO,IAAM,GACbA,EAAO,IAAM,GACbA,EAAO,IAAM,GACbA,EAAO,IAAM,GAGfD,EAAQF,SCrFRM,EAA2B,GFD/B,EEIA,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,IAOV,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,QFrBf,KAEM/B,EAAUkC,SAASC,cAAc,aAEjClC,EAAoB,SAAUmC,GAClC,OAAQF,SAASC,cAAcC,GAAgCC,OAgB3DnC,EAAkB,SAAUoC,GAChCA,EAAMC,iBAbC,IAAIlB,SAAiB,SAACC,GAI3BA,EAAQ,CACNL,IAJUhB,EAAkB,cAK5BiB,MAJYjB,EAAkB,gBAK9BkB,KAJWlB,EAAkB,oBAY9BuC,KAAK,EAAAxB,cACLwB,MAAK,SAACC,GACLA,EAAKC,SAAQ,SAACtC,GACZ,IAAMuC,EAAiBT,SAASU,cAAc,MAC9CD,EAAeE,YAAczC,EAC7BJ,EAAQ8C,OAAOH,UAMRT,SAASC,cAAc,sBAC/BY,iBAAiB,SAAU7C,I","file":"generate-cpr.js","sourcesContent":["import { CprDate, generateCprs } from '../src/cpr';\n\nconst cprList = document.querySelector('#cpr-list')!;\n\nconst getValueFromInput = function (elementId: string): string {\n  return (document.querySelector(elementId) as HTMLInputElement).value;\n};\n\nconst getInputValues = function () {\n  return new Promise<CprDate>((resolve) => {\n    const day = getValueFromInput('#day-input');\n    const month = getValueFromInput('#month-input');\n    const year = getValueFromInput('#year-input');\n    resolve({\n      day,\n      month,\n      year,\n    });\n  });\n};\n\nconst onSubmitHandler = function (event: Event) {\n  event.preventDefault();\n  getInputValues()\n    .then(generateCprs)\n    .then((cprs) => {\n      cprs.forEach((cpr) => {\n        const cprListElement = document.createElement('li');\n        cprListElement.textContent = cpr;\n        cprList.append(cprListElement);\n      });\n    });\n};\n\n(function () {\n  const form = document.querySelector('#generate-cpr-form') as HTMLFormElement;\n  form.addEventListener('submit', onSubmitHandler);\n})();\n","const convertCprStringToDigits = function (cpr: string): number[] {\n  return cpr.split('').map((digit) => {\n    return parseInt(digit);\n  });\n};\n\nexport type CprDate = {\n  day: string;\n  month: string;\n  year: string;\n};\n\nexport const validateCpr = function (cpr: string): boolean {\n  const digitisInCpr = convertCprStringToDigits(cpr);\n  const multiplierSequence = [4, 3, 2, 7, 6, 5, 4, 3, 2, 1];\n  const result = digitisInCpr.reduce((previousValue, currentValue, index) => {\n    return previousValue + currentValue * multiplierSequence[index];\n  }, 0);\n\n  return result % 11 === 0;\n};\n\nexport const generateCprs = function ({\n  day,\n  month,\n  year,\n}: CprDate): Promise<string[]> {\n  const validCprs: string[] = [];\n  return new Promise<string[]>((resolve) => {\n    const digits = [0, 0, 0, 0];\n    do {\n      if (digits[3] <= 9) {\n        digits[3] += 1;\n      } else {\n        digits[3] = 0;\n      }\n\n      if (digits[3] > 9 && digits[2] <= 9) {\n        digits[2] += 1;\n      }\n\n      if (digits[2] > 9 && digits[1] <= 9) {\n        digits[1] += 1;\n      }\n\n      if (digits[1] > 9 && digits[0] <= 9) {\n        digits[0] += 1;\n      }\n\n      if (digits[3] > 9) {\n        digits[3] = 0;\n      }\n\n      if (digits[2] > 9) {\n        digits[2] = 0;\n      }\n\n      if (digits[1] > 9) {\n        digits[1] = 0;\n      }\n\n      if (digits[0] > 9) {\n        digits[0] = 0;\n      }\n\n      const cpr = day + month + year + digits.join('');\n      const isValid = validateCpr(cpr);\n      if (isValid) {\n        validCprs.push(cpr);\n      }\n\n      if (\n        digits[3] === 9 &&\n        digits[2] === 9 &&\n        digits[1] === 9 &&\n        digits[0] === 9\n      ) {\n        break;\n      }\n    } while (\n      digits[3] <= 9 &&\n      digits[2] <= 9 &&\n      digits[1] <= 9 &&\n      digits[0] <= 9\n    );\n\n    resolve(validCprs);\n  });\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n"],"sourceRoot":""}